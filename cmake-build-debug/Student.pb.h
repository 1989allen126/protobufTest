// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Student.proto

#ifndef PROTOBUF_Student_2eproto__INCLUDED
#define PROTOBUF_Student_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace jl {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Student_2eproto();
void protobuf_InitDefaults_Student_2eproto();
void protobuf_AssignDesc_Student_2eproto();
void protobuf_ShutdownFile_Student_2eproto();

class Student;

// ===================================================================

class Student : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:jl.Student) */ {
 public:
  Student();
  virtual ~Student();

  Student(const Student& from);

  inline Student& operator=(const Student& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Student& default_instance();

  static const Student* internal_default_instance();

  void Swap(Student* other);

  // implements Message ----------------------------------------------

  inline Student* New() const { return New(NULL); }

  Student* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Student& from);
  void MergeFrom(const Student& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Student* other);
  void UnsafeMergeFrom(const Student& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 age = 3;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 3;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:jl.Student)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_age();
  inline void clear_has_age();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 age_;
  friend void  protobuf_InitDefaults_Student_2eproto_impl();
  friend void  protobuf_AddDesc_Student_2eproto_impl();
  friend void protobuf_AssignDesc_Student_2eproto();
  friend void protobuf_ShutdownFile_Student_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Student> Student_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Student

// required int32 id = 1;
inline bool Student::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Student::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Student::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Student::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Student::id() const {
  // @@protoc_insertion_point(field_get:jl.Student.id)
  return id_;
}
inline void Student::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:jl.Student.id)
}

// optional string name = 2;
inline bool Student::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Student::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Student::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Student::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Student::name() const {
  // @@protoc_insertion_point(field_get:jl.Student.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Student::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jl.Student.name)
}
inline void Student::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jl.Student.name)
}
inline void Student::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jl.Student.name)
}
inline ::std::string* Student::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:jl.Student.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Student::release_name() {
  // @@protoc_insertion_point(field_release:jl.Student.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Student::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:jl.Student.name)
}

// optional int32 age = 3;
inline bool Student::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Student::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Student::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Student::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 Student::age() const {
  // @@protoc_insertion_point(field_get:jl.Student.age)
  return age_;
}
inline void Student::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:jl.Student.age)
}

inline const Student* Student::internal_default_instance() {
  return &Student_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace jl

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Student_2eproto__INCLUDED
